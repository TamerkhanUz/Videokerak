import os
import time
import tempfile
import yt_dlp
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters
from telegram.error import TimedOut

TOKEN = "8198686578:AAFDpwqt7yzTmH_KzXGZG-HBKhpDy5hOTxg"
CHANNEL = "@TamerkhanBlog"

user_lang = {}
last_update_time = {}

# Bu yerga sizning cookie fayl matni:
COOKIE_TXT_CONTENT = """
# Netscape HTTP Cookie File
# http://curl.haxx.se/rfc/cookie_spec.html
# This file was generated by Cookie-Editor
#HttpOnly_.instagram.com	TRUE	/	TRUE	1789675508	ps_n	1
.instagram.com	TRUE	/	TRUE	1786651504	ig_nrcb	1
.instagram.com	TRUE	/	TRUE	1762894475	ds_user_id	75972005639
.instagram.com	TRUE	/	TRUE	1789678475	csrftoken	SXn6qW5mxhh3mynZyuMyQ5rQy3Ulb7Mr
.instagram.com	TRUE	/	TRUE	1755720360	wd	1440x739
.instagram.com	TRUE	/	TRUE	1789675489	mid	aJzv3gALAAHT1K-U_HLUyLOE3rax
#HttpOnly_.instagram.com	TRUE	/	TRUE	1755204879	rur	"LLA\05475972005639\0541786654474:01fea6250489819cc862ee868d5ac3da878f971c489f09851b4b0583426e6e9909163ee2"
#HttpOnly_.youtube.com	TRUE	/	TRUE	1789665962	__Secure-3PSID	g.a0000QgG2wi851On4ZgK7E0xx5D0zz3DnC8aX5HXJ5pWFu36fnXimFiX_zUE3aTPf35BYddUsQACgYKARMSARESFQHGX2MiZRvtDwH0YD2IagdOieGrfBoVAUF8yKpPSk1Zbn2LVpzqDg8u_QJK0076
.youtube.com	TRUE	/	FALSE	1786654108	SIDCC	AKEyXzWabAEi1eHjrHEjcI08cy9wVmp4xbz6Ih8r51l09syK8aj2t4SwWJ_f0prcLrOFdDwc8Q
.youtube.com	TRUE	/	FALSE	1789665962	SID	g.a0000QgG2wi851On4ZgK7E0xx5D0zz3DnC8aX5HXJ5pWFu36fnXiD8Ci5MnIhwkLdlJ-nGkrAQACgYKAZsSARESFQHGX2MiSEQBg3filQWIJEMy_NK0nRoVAUF8yKomvcUYHk_6ClB2SiZPkmO60076
.youtube.com	TRUE	/	TRUE	1789665962	SAPISID	Ipckja1ngCkM_Ow1/A5gWFymTFJAfb5DJu
.youtube.com	TRUE	/	TRUE	1789665962	SSID	AfluhTn-_PIYx4lIb
.youtube.com	TRUE	/	TRUE	1789665962	__Secure-1PAPISID	Ipckja1ngCkM_Ow1/A5gWFymTFJAfb5DJu
.youtube.com	TRUE	/	TRUE	1789665962	__Secure-3PAPISID	Ipckja1ngCkM_Ow1/A5gWFymTFJAfb5DJu
.youtube.com	TRUE	/	FALSE	1789665962	APISID	-daQVXCusras2JoL/AIj8dhcErKlEUy5lr
.youtube.com	TRUE	/	FALSE	1789665962	HSID	AfJpJxIgtlbse5K-Q
.youtube.com	TRUE	/	TRUE	1789227071	LOGIN_INFO	AFmmF2swRAIga7ZBXqZkcG6e3Rp49-du5mYHBEo9nkzFevret9gD6xoCICsgfu4OX-hp0t9DQlN6e7A45MV8Z-76QC37Aj97kc26:QUQ3MjNmeXYxNDZ0dGQtNmZENnRRS3hqbXFZTnRpX1dIbHVGMkdSMnJvd3Y5eV9sMng0cFBZYmRKTGFOdExOV0ZpZUt3eWEtcWNDUzYwQ18zbUpRQ2hGZGFJTHdtd0xuN2ctVW8zU1haZUhCc2pHU25sQ1otWVk3YWtWRU8zMV9XZXJfTWJyTVFidjExMDhvb0dIcllwSjZVbVhCSnpMVVQ1bVI1OXF3R2hndWRrOU5KRFFabWp6MEotVWJUM3g4aF9HMWxJclh5MHBCaHFRUW9wWVVxNUFJTkNfWjlScmZTdw==
.youtube.com	TRUE	/	TRUE	1789672100	PREF	tz=Asia.Tashkent&f7=100
"""

async def progress_hook(d, message, context, user_id):
    if d['status'] == 'downloading':
        now = time.time()
        if user_id not in last_update_time:
            last_update_time[user_id] = 0
        if now - last_update_time[user_id] < 1:
            return
        last_update_time[user_id] = now

        percent = d.get('_percent_str', '').strip()
        speed = d.get('_speed_str', 'Noma’lum')
        eta = d.get('_eta_str', '???')
        text = f"⬇ Yuklanmoqda: {percent} | 📡 Tezlik: {speed} | ⏳ Qolgan vaqt: {eta}"
        try:
            await message.edit_text(text)
        except TimedOut:
            await message.edit_text("⏳ Bir necha soniyada sizga yetib boradi, sabrli bo‘ling...")
        except:
            pass

async def download_video(url, message, context, user_id):
    # Vaqtinchalik cookies fayl yaratamiz va yozamiz
    with tempfile.NamedTemporaryFile(mode='w+', delete=True) as tmp_cookie_file:
        tmp_cookie_file.write(COOKIE_TXT_CONTENT)
        tmp_cookie_file.flush()

        ydl_opts = {
            'outtmpl': 'video.%(ext)s',
            'format': 'best',
            'cookiefile': tmp_cookie_file.name,
            'progress_hooks': [lambda d: context.application.create_task(progress_hook(d, message, context, user_id))]
        }
        try:
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=True)
                filename = ydl.prepare_filename(info)

            await message.edit_text("✅ Yuklab bo‘ldi! 📤 Yuborilmoqda...")
            with open(filename, 'rb') as video_file:
                await context.bot.send_video(
                    chat_id=message.chat_id,
                    video=video_file,
                    caption="📽 @VideoKerakBot orqali yuklab olindi"
                )
            os.remove(filename)
        except Exception as e:
            await message.edit_text(f"❌ Xatolik yuz berdi: {e}")

# Quyidagi start, lang_callback, check_sub_callback va handle_message funksiyalarni siz oldin berdingiz, o'zgartirish shart emas.

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("🇺🇿 O'zbek", callback_data='lang_uz')],
        [InlineKeyboardButton("🇷🇺 Русский", callback_data='lang_ru')],
        [InlineKeyboardButton("🇬🇧 English", callback_data='lang_en')],
        [InlineKeyboardButton("🇩🇪 Deutsch", callback_data='lang_de')]
    ]
    await update.message.reply_text(
        "Tilni tanlang / Choose language / Выберите язык / Sprache auswählen:", 
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def lang_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    lang = query.data.split('_')[1]
    user_lang[query.from_user.id] = lang

    keyboard = [
        [InlineKeyboardButton("📢 Kanalga obuna bo'lish", url=f"https://t.me/{CHANNEL[1:]}")],
        [InlineKeyboardButton("✅ Tekshirish", callback_data='check_sub')]
    ]

    texts = {
        "uz": "Botdan foydalanish uchun kanalga obuna bo‘ling va tekshirish tugmasini bosing.",
        "ru": "Для использования бота подпишитесь на канал и нажмите кнопку Проверить.",
        "en": "To use the bot, subscribe to the channel and click Check button.",
        "de": "Um den Bot zu benutzen, abonniere den Kanal und klicke auf 'Überprüfen'."
    }

    await query.edit_message_text(
        text=texts[lang], 
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def check_sub_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    lang = user_lang.get(user_id, "uz")
    
    # Haqiqiy tekshirishni Telegram API bilan amalga oshiring
    is_subscribed = True

    texts_success = {
        "uz": "✅ Siz obuna bo‘ldingiz! Endi videoni yuboring.",
        "ru": "✅ Вы подписаны! Теперь отправьте видео.",
        "en": "✅ You are subscribed! Now send a video.",
        "de": "✅ Du hast abonniert! Jetzt schicke ein Video."
    }
    texts_fail = {
        "uz": "❌ Iltimos kanalga obuna bo‘ling.",
        "ru": "❌ Пожалуйста, подпишитесь на канал.",
        "en": "❌ Please subscribe to the channel.",
        "de": "❌ Bitte abonniere den Kanal."
    }

    if is_subscribed:
        await query.edit_message_text(text=texts_success[lang])
    else:
        await query.answer(text=texts_fail[lang], show_alert=True)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()
    user_id = update.message.from_user.id
    lang = user_lang.get(user_id, "uz")

    if any(x in url for x in ["youtube.com", "youtu.be", "tiktok.com", "instagram.com"]):
        msg = await update.message.reply_text("📥 Video yuklanmoqda, kuting...")
        await download_video(url, msg, context, user_id)
    else:
        texts_invalid = {
            "uz": "❌ Bu faqat YouTube, TikTok va Instagram videolari uchun ishlaydi.",
            "ru": "❌ Работает только с видео YouTube, TikTok и Instagram.",
            "en": "❌ Only works for YouTube, TikTok, and Instagram videos.",
            "de": "❌ Funktioniert nur mit YouTube-, TikTok- und Instagram-Videos."
        }
        await update.message.reply_text(texts_invalid[lang])

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(lang_callback, pattern=r'lang_'))
    app.add_handler(CallbackQueryHandler(check_sub_callback, pattern=r'check_sub'))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("Bot ishga tushdi...")
    app.run_polling()
